/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */




class Attributes{
    TreeNode parent;
    int level;
    
    Attributes(TreeNode parent,int level){
        this.parent=parent;
        this.level=level;
    }
}
class Solution {
    public boolean isCousins(TreeNode root, int x, int y) {
        Attributes pair1=isCousinsHelper(root,x,null,0);
        Attributes pair2=isCousinsHelper(root,y,null,0);
        if(pair1.level==pair2.level && pair1.parent!=pair2.parent)
            return true;
        return false;
    }
    public Attributes isCousinsHelper(TreeNode root,int value,TreeNode parent,int level){
        if(root==null)
            return null;
        
        if(root.val==value){
            return new Attributes(parent,level);
        }
        
        Attributes leftnode=isCousinsHelper(root.left,value,root,level+1);
        Attributes rightnode=isCousinsHelper(root.right,value,root,level+1);
        
        if(leftnode==null)
            return rightnode;
        else
            return leftnode;
    }
}